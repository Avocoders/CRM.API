<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CRM.API</name>
    </assembly>
    <members>
        <member name="T:CRM.API.Controllers.LeadController">
            <summary>
            
            </summary>
        </member>
        <member name="M:CRM.API.Controllers.LeadController.#ctor(Microsoft.Extensions.Logging.ILogger{CRM.API.Controllers.LeadController},CRM.Data.ILeadRepository,AutoMapper.IMapper,CRM.API.Controllers.ResponseWrapper)">
            <summary>
            
            </summary>
            <param name="logger"></param>
            <param name="repo"></param>
            <param name="mapper"></param>
            <param name="validator"></param>
        </member>
        <member name="M:CRM.API.Controllers.LeadController.GetLeadById(System.Int64)">
            <summary>
            gets the lead by Id with all information
            </summary>
            <param name="leadId"></param>       
        </member>
        <member name="M:CRM.API.Controllers.LeadController.CreateLead(CRM.API.Models.Input.LeadInputModel)">
            <summary>
            creates a new lead
            </summary>
            <param name="leadModel"></param>       
        </member>
        <member name="M:CRM.API.Controllers.LeadController.UpdateLead(CRM.API.Models.Input.LeadInputModel)">
            <summary>
            edits lead's information by leadId
            </summary>
            <param name="leadModel"></param>        
        </member>
        <member name="M:CRM.API.Controllers.LeadController.DeleteLeadById(System.Int64)">
            <summary>
            deletes the lead by Id
            </summary>
            <param name="leadId"></param>        
        </member>
        <member name="M:CRM.API.Controllers.LeadController.UpdatePassword(CRM.API.Models.Input.PasswordInputModel)">
            <summary>
            updates password for lead
            </summary>
            <param name="passwordModel"></param>       
        </member>
        <member name="M:CRM.API.Controllers.LeadController.UpdateEmailByLeadId(CRM.API.Models.Input.EmailInputModel)">
            <summary>
            edits lead's email by leadId 
            </summary>
            <param name="emailModel"></param>        
        </member>
        <member name="M:CRM.API.Controllers.LeadController.SearchLead(CRM.API.Models.Input.SearchParametersInputModel)">
            <summary>
            searches leads by different parameters
            </summary>
            <param name="searchparameters"></param>        
        </member>
        <member name="M:CRM.API.Controllers.LeadController.GetAccountById(System.Int64)">
            <summary>
            gets the account by Id with all information
            </summary>
            <param name="id"></param>       
        </member>
        <member name="M:CRM.API.Controllers.LeadController.GetAccountsByLeadId(System.Int64)">
             <summary>
             
            withdrawing invoices by id lead
             </summary>
             <param name="leadId"></param>
             <returns></returns>
        </member>
        <member name="M:CRM.API.Controllers.LeadController.CreateAccount(CRM.API.Models.Input.AccountInputModel)">
             <summary>
             
            creating an invoice for lead in the required currency
             </summary>
             <param name="account"></param>
             <returns></returns>
        </member>
        <member name="M:CRM.API.Controllers.LeadController.UpdateAccount(CRM.API.Models.Input.AccountInputModel)">
            <summary>
            change of account currency
            </summary>
            <param name="account"></param>
            <returns></returns>
        </member>
        <member name="T:CRM.API.Controllers.LoginController">
            <summary>
            LoginController
            </summary>
        </member>
        <member name="M:CRM.API.Controllers.LoginController.Authorization(CRM.API.Models.Input.AuthorizeInputModel)">
            <summary>
            Authorization
            </summary>
            <param name="auth"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.API.Controllers.TransactionController.CreateTransferTransaction(TransactionStore.API.Models.Input.TransferInputModel)">
            <summary>
            refers to TransactionStore to create a transfer transaction
            </summary>
            <param name="transactionModel"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.API.Controllers.TransactionController.CreateWithdrawTransaction1">
            <summary>
            refers to TransactionStore to create a withdraw transaction
            </summary>
            <param name="transactionModel"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.API.Controllers.TransactionController.CreateDepositTransaction(TransactionStore.API.Models.Input.TransactionInputModel)">
            <summary>
            refers to TransactionStore to create a deposit transaction
            </summary>
            <param name="transactionModel"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.API.Controllers.TransactionController.GetTransactionsByAccountId(System.Int64)">
            <summary>
            refers to TransactionStore to get all lead's transactions by leadId
            </summary>
            <param name="accountId"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.API.Controllers.TransactionController.GetTransactionById(System.Int64)">
            <summary>
            refers to TransactionStore to get transaction by Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.API.Controllers.TransactionController.GetBalanceByAccountIdInCurrency(System.Int64)">
            <summary>
            refers to TransactionStore to get balance by leadId and currencyId
            </summary>
            <param name="accountId"></param>
            <returns></returns>
        </member>
        <member name="T:CRM.API.Startup">
            <summary>
            Startup
            </summary>
        </member>
        <member name="P:CRM.API.Startup.Configuration">
            <summary>
            Configuration
            </summary>
        </member>
        <member name="M:CRM.API.Startup.#ctor(Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Startup
            </summary>
            <param name="env"></param>
        </member>
        <member name="M:CRM.API.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            ConfigureServices
            </summary>
            <param name="services"></param>
        </member>
    </members>
</doc>
